import{_ as s,o as l,c as e,d as a}from"./app.33845605.js";const m=JSON.parse('{"title":"jenkins","description":"","frontmatter":{},"headers":[{"level":2,"title":"docker 安装jenkins","slug":"docker-安装jenkins","link":"#docker-安装jenkins","children":[]},{"level":2,"title":"docker-compose安装jenkins","slug":"docker-compose安装jenkins","link":"#docker-compose安装jenkins","children":[{"level":3,"title":"1,创建文件夹","slug":"_1-创建文件夹","link":"#_1-创建文件夹","children":[]},{"level":3,"title":"2,创建docker-compose.yml文件","slug":"_2-创建docker-compose-yml文件","link":"#_2-创建docker-compose-yml文件","children":[]},{"level":3,"title":"3,运行docker-compose.yml文件,启动jenkins","slug":"_3-运行docker-compose-yml文件-启动jenkins","link":"#_3-运行docker-compose-yml文件-启动jenkins","children":[]}]},{"level":2,"title":"1,访问jenkins","slug":"_1-访问jenkins","link":"#_1-访问jenkins","children":[]},{"level":2,"title":"2,解锁jenkins","slug":"_2-解锁jenkins","link":"#_2-解锁jenkins","children":[]},{"level":2,"title":"3,选择插件安装","slug":"_3-选择插件安装","link":"#_3-选择插件安装","children":[]},{"level":2,"title":"4,创建管理员账号","slug":"_4-创建管理员账号","link":"#_4-创建管理员账号","children":[]},{"level":2,"title":"5,安装完成","slug":"_5-安装完成","link":"#_5-安装完成","children":[]},{"level":2,"title":"6,安装插件","slug":"_6-安装插件","link":"#_6-安装插件","children":[]},{"level":2,"title":"7,配置nodejs","slug":"_7-配置nodejs","link":"#_7-配置nodejs","children":[]},{"level":2,"title":"8,配置maven","slug":"_8-配置maven","link":"#_8-配置maven","children":[]},{"level":2,"title":"9,配置JDK","slug":"_9-配置jdk","link":"#_9-配置jdk","children":[]},{"level":2,"title":"10,配置SSH服务器","slug":"_10-配置ssh服务器","link":"#_10-配置ssh服务器","children":[]},{"level":2,"title":"11,新建任务","slug":"_11-新建任务","link":"#_11-新建任务","children":[]},{"level":2,"title":"12,配置git地址","slug":"_12-配置git地址","link":"#_12-配置git地址","children":[]},{"level":2,"title":"13,打包配置","slug":"_13-打包配置","link":"#_13-打包配置","children":[]},{"level":2,"title":"14,配置SSH上传","slug":"_14-配置ssh上传","link":"#_14-配置ssh上传","children":[]},{"level":2,"title":"15,构建","slug":"_15-构建","link":"#_15-构建","children":[]},{"level":2,"title":"注意","slug":"注意","link":"#注意","children":[]},{"level":2,"title":"自定义Maven路径","slug":"自定义maven路径","link":"#自定义maven路径","children":[]},{"level":2,"title":"错误处理","slug":"错误处理","link":"#错误处理","children":[{"level":3,"title":"java.net.UnknownHostException: updates.jenkins.io","slug":"java-net-unknownhostexception-updates-jenkins-io","link":"#java-net-unknownhostexception-updates-jenkins-io","children":[]},{"level":3,"title":"No valid crumb was included in request","slug":"no-valid-crumb-was-included-in-request","link":"#no-valid-crumb-was-included-in-request","children":[]},{"level":3,"title":"553 mail from must equal authorized user","slug":"_553-mail-from-must-equal-authorized-user","link":"#_553-mail-from-must-equal-authorized-user","children":[]},{"level":3,"title":"Maven JVM terminated unexpectedly with exit code 137","slug":"maven-jvm-terminated-unexpectedly-with-exit-code-137","link":"#maven-jvm-terminated-unexpectedly-with-exit-code-137","children":[]}]}],"relativePath":"other/jenkins.md","lastUpdated":1663902827000}'),n={name:"other/jenkins.md"},o=a(`<h1 id="jenkins" tabindex="-1">jenkins <a class="header-anchor" href="#jenkins" aria-hidden="true">#</a></h1><blockquote><p>jenkins 是一个开源的持续集成工具，可以用来自动化构建、测试、部署项目</p></blockquote><blockquote><p>这里用docker-compose 部署jenkins,并把jenkins文件夹映射到外部,方便管理</p></blockquote><h2 id="docker-安装jenkins" tabindex="-1">docker 安装jenkins <a class="header-anchor" href="#docker-安装jenkins" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 获取镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jenkins/jenkins:lts</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 运行</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8080</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">8080</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50000</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">50000</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/root/mydocker/jenkins:/var/jenkins_home</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">myjenkins</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-u</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--privileged=true</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--restart=always</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jenkins/jenkins:lts</span></span>
<span class="line"></span></code></pre></div><h2 id="docker-compose安装jenkins" tabindex="-1">docker-compose安装jenkins <a class="header-anchor" href="#docker-compose安装jenkins" aria-hidden="true">#</a></h2><h3 id="_1-创建文件夹" tabindex="-1">1,创建文件夹 <a class="header-anchor" href="#_1-创建文件夹" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">demo</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//存放docker-compose.yml文件</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jenkins</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//jenkins文件夹</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jenkins_home</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//jenkins运行环境外部映射文件夹</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-创建docker-compose-yml文件" tabindex="-1">2,创建docker-compose.yml文件 <a class="header-anchor" href="#_2-创建docker-compose-yml文件" aria-hidden="true">#</a></h3><p>在compose文件夹下创建docker-compose.yml文件</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">version:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">services:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">docker_jenkins:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">user:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 使用root用户运行docker</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">restart:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">always</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 重启时重新启动</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">image:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jenkins/jenkins:lts</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 镜像</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">container_name:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker_jenkins</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 容器名称</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">ports:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">8080:8080</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 容器端口映射到主机端口</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">50000:50000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 容器端口映射到主机端口</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">volumes:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/demo/jenkins/jenkins_home:/var/jenkins_home</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 把jenkins_home映射到本地</span></span>
<span class="line"></span></code></pre></div><p><img src="https://article.biliimg.com/bfs/article/7ac8eae312c980d5a080416637471ee85895ff1a.png" alt="图片"></p><h3 id="_3-运行docker-compose-yml文件-启动jenkins" tabindex="-1">3,运行docker-compose.yml文件,启动jenkins <a class="header-anchor" href="#_3-运行docker-compose-yml文件-启动jenkins" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span></span>
<span class="line"></span></code></pre></div><p><img src="https://article.biliimg.com/bfs/article/49bd4814740253982e822cc907f315f6b07c69eb.png" alt="图片"></p><blockquote><p>查看是否启动成功</p></blockquote><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ps</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-a</span></span>
<span class="line"></span></code></pre></div><p><img src="https://article.biliimg.com/bfs/article/4e699dec924b35da5e332f85d0c37461cfea990d.png" alt="img"></p><blockquote><p>启动成功,并且端口8080已经和本地8080映射了</p></blockquote><h2 id="_1-访问jenkins" tabindex="-1">1,访问jenkins <a class="header-anchor" href="#_1-访问jenkins" aria-hidden="true">#</a></h2><blockquote><p>浏览器打开 <code>http://localhost:8080</code></p></blockquote><p><img src="https://article.biliimg.com/bfs/article/c6f0fc3de62db66c7e897ae0feebeb359b5a4d7d.png" alt="img"></p><h2 id="_2-解锁jenkins" tabindex="-1">2,解锁jenkins <a class="header-anchor" href="#_2-解锁jenkins" aria-hidden="true">#</a></h2><blockquote><p>进入jenkins后,会提示解锁jenkins,需要在docker容器中找到解锁密码</p></blockquote><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 进入docker容器</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker_jenkins</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/bin/bash</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 找到解锁密码</span></span>
<span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/var/jenkins_home/secrets/initialAdminPassword</span></span>
<span class="line"></span></code></pre></div><h2 id="_3-选择插件安装" tabindex="-1">3,选择插件安装 <a class="header-anchor" href="#_3-选择插件安装" aria-hidden="true">#</a></h2><blockquote><p>选择自己需要的插件安装,也可以直接安装后面再安装</p></blockquote><p><img src="https://article.biliimg.com/bfs/article/fb1d668ccd564924202d3aacf41630db83035ccd.png" alt="img"></p><h2 id="_4-创建管理员账号" tabindex="-1">4,创建管理员账号 <a class="header-anchor" href="#_4-创建管理员账号" aria-hidden="true">#</a></h2><blockquote><p>创建管理员账号</p></blockquote><p><img src="https://article.biliimg.com/bfs/article/a5b03d494be52fee197f7b73b6aa2e4afb10cbed.png" alt="img"></p><h2 id="_5-安装完成" tabindex="-1">5,安装完成 <a class="header-anchor" href="#_5-安装完成" aria-hidden="true">#</a></h2><blockquote><p>安装完成,进入jenkins</p></blockquote><p><img src="https://article.biliimg.com/bfs/article/10866b6f646647b93d9c72b1c5ad50c15b4beb0c.png" alt="img"></p><h2 id="_6-安装插件" tabindex="-1">6,安装插件 <a class="header-anchor" href="#_6-安装插件" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">安装插件</p><ul><li>Localization: Chinese (Simplified) 中文语言包</li><li>Publish Over SSH 通过ssh上传打包产物</li><li>github plugin</li><li>gitlab plugin</li><li>gitee plugin</li><li>nodejs plugin</li><li>Maven Integration</li></ul></div><h2 id="_7-配置nodejs" tabindex="-1">7,配置nodejs <a class="header-anchor" href="#_7-配置nodejs" aria-hidden="true">#</a></h2><blockquote><p>配置nodejs,主要是前端项目使用</p></blockquote><blockquote><p>打开系统管理 -&gt; 全局工具配置 -&gt; nodejs</p></blockquote><blockquote><p>按照如下配置</p></blockquote><p><img src="https://article.biliimg.com/bfs/article/3dfc98a8dc0793bc9898142b4e50baaa9ab4fd5c.png" alt="img"></p><h2 id="_8-配置maven" tabindex="-1">8,配置maven <a class="header-anchor" href="#_8-配置maven" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><p>主要是后端java项目使用</p></li><li><p>打开系统管理 -&gt; 全局工具配置 -&gt; Maven</p></li><li><p>如下配置</p></li></ul></div><p><img src="https://article.biliimg.com/bfs/article/50c9258868972806cf4f6450043213ee6b5ba973.png" alt="img"></p><h2 id="_9-配置jdk" tabindex="-1">9,配置JDK <a class="header-anchor" href="#_9-配置jdk" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">配置JDK</p><ul><li><p>主要是后端java项目使用</p></li><li><p>打开系统管理 -&gt; 全局工具配置 -&gt; JDK</p></li><li><p>需要登录甲骨文账号,点击下图红色区域输入甲骨文账号密码</p></li></ul></div><p><img src="https://article.biliimg.com/bfs/article/8837d02222be566a9789a02d08b1ba6042a29451.png" alt="i"></p><p><img src="https://article.biliimg.com/bfs/article/275948e8d33132f4febd552139c139129be38c1c.png" alt="i"></p><h2 id="_10-配置ssh服务器" tabindex="-1">10,配置SSH服务器 <a class="header-anchor" href="#_10-配置ssh服务器" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">服务器</p><ul><li><p>配置服务器是为了自动化部署使用</p></li><li><p>打开系统管理 -&gt; 系统管理 -&gt; 系统配置 -&gt; SSH Servers</p></li><li><p>注意配置时,点击高级,选择Use password authentication, or use a different key,并输入密码</p></li><li><p>配置完点击Test Configuration 如果出现Success 表示添加ssh服务器成功</p></li><li><p>按照下图配置</p></li></ul></div><p><img src="https://article.biliimg.com/bfs/article/428bdb69861ad45d17aed71de29b9de6952f666f.png" alt="i"></p><h2 id="_11-新建任务" tabindex="-1">11,新建任务 <a class="header-anchor" href="#_11-新建任务" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">新建任务</p><ul><li><p>点击新建任务按钮</p></li><li><p>输入任务名称</p></li><li><p>选择构建一个maven项目</p></li><li><p>点击确定</p></li></ul></div><p><img src="https://article.biliimg.com/bfs/article/7cce44a5094d6123af38fef4d2802c602738c037.png" alt="i"></p><h2 id="_12-配置git地址" tabindex="-1">12,配置git地址 <a class="header-anchor" href="#_12-配置git地址" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><p>进入项目 -&gt; 设置 -&gt; 源码管理</p></li><li><p>点击git,Repository URL栏输入项目git地址</p></li><li><p>Credentials选择一个用户名密码,没有的点击下方添加按钮添加</p></li><li><p>如果没有红色报错,表示添加git成功</p></li><li><p>指定分支写 */master 默认主分支</p></li></ul></div><p><img src="https://article.biliimg.com/bfs/article/16ec8812dd5b8f2cf4f2ca543d16a275c9924c4e.png" alt="i"></p><h2 id="_13-打包配置" tabindex="-1">13,打包配置 <a class="header-anchor" href="#_13-打包配置" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">打包配置</p><ul><li><p>Root POM 输入pom.xml的地址</p></li><li><p>Goals and options 输入 打包命令 clean install</p></li><li><p>如下配置</p></li></ul></div><p><img src="https://article.biliimg.com/bfs/article/dc21ad148c416491ed940b9061ccb1ce3ed88296.png" alt="i"></p><h2 id="_14-配置ssh上传" tabindex="-1">14,配置SSH上传 <a class="header-anchor" href="#_14-配置ssh上传" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">SSH上传</p><ul><li><p>点击 增加构建后操作步骤 按钮</p></li><li><p>选择 Send build artifacts over SSH 选项</p></li><li><p>在SSH-SERVER中选择要上传的服务器</p></li><li><p>在Source files中输入打包的产物的径</p></li><li><p>在Remove prefix 输入产物前路径,不然会连着文件夹一起传输</p></li><li><p>在 Remote directory 输入 服务器当前用户目录下面的某一个文件夹</p></li></ul><p><strong>例如上传到 /root/jobs 用户文件夹根目录是 /root 那就此处填写 jobs</strong></p><ul><li>在 Exec command 输入上传完成后需要执行的命令,一般是执行命令</li></ul><p><strong>如果填写了Remote directory,那就要先进入这个文件夹,例如 # cd jobs</strong></p></div><p><img src="https://article.biliimg.com/bfs/article/70b458f265c83cebcbfad6b474f3e72d95ca3fb1.png" alt="i"></p><div class="tip custom-block"><p class="custom-block-title">提示</p><ul><li>如果有多个文件需要上传,可以点击下方 Add Transfer Set 按钮新增上传</li></ul></div><h2 id="_15-构建" tabindex="-1">15,构建 <a class="header-anchor" href="#_15-构建" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">构建</p><ul><li>返回项目目录,点击 立即构建 按钮</li></ul></div><p><img src="https://article.biliimg.com/bfs/article/a245aa1f3b9e4b29b3b701d8cbd66736890b73bd.png" alt="i"></p><h2 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">注意</p><ul><li><p>1, 配置完Maven和JDK以后,jenkins并不会在配置完就安装,而是在第一次运行任务的时候自动安装</p></li><li><p>2,docker-compose是定义和编排docker镜像的工具,通过使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务</p></li><li><p>3,第一次运行任务会需要较长时间用来下载依赖和安装Maven,JDK,第二次以后就会快很多</p></li></ul></div><h2 id="自定义maven路径" tabindex="-1">自定义Maven路径 <a class="header-anchor" href="#自定义maven路径" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">路径</p><ul><li><p>系统管理 -&gt; 系统设置 -&gt; Local Maven Repository 选择 <code>Default (&quot;~/.m2/repository&quot;, or the value of &#39;localRepository&#39; in Maven&#39;s settings file, if defined)</code></p></li><li><p>如果想修改maven配置文件可以在 /var/jenkins_home/tools/hudson.tasks.Maven_MavenInstallation/3.8.6/conf 路径下找到setting.xml</p></li><li><p>修改本地仓库路径: <code>&lt;localRepository&gt;/root/mvnrep&lt;/localRepository&gt;</code></p></li><li><p>修改阿里云镜像</p></li></ul><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mirror</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">aliyunmaven</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mirrorOf</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">*</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">mirrorOf</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">阿里云公共仓库</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">https://maven.aliyun.com/repository/public</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">mirror</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></div><h2 id="错误处理" tabindex="-1">错误处理 <a class="header-anchor" href="#错误处理" aria-hidden="true">#</a></h2><h3 id="java-net-unknownhostexception-updates-jenkins-io" tabindex="-1">java.net.UnknownHostException: <a href="http://updates.jenkins.io" target="_blank" rel="noreferrer">updates.jenkins.io</a> <a class="header-anchor" href="#java-net-unknownhostexception-updates-jenkins-io" aria-hidden="true">#</a></h3><div class="warning custom-block"><p class="custom-block-title">联网错误</p><ul><li>如果出现:WARNING hudson.model.UpdateCenter#updateDefaultSite: Upgrading Jenkins. Failed to update the default Update Site &#39;default&#39;. Plugin upgrades may fail. java.net.UnknownHostException: <a href="http://updates.jenkins.io" target="_blank" rel="noreferrer">updates.jenkins.io</a></li></ul><p>可能是jenkins没有联网,有两个方法</p><p>1,打开 localhost:8080/pluginManager/advanced 修改 update Site URL 为 <a href="http://updates.jenkins.io/update-center.json" target="_blank" rel="noreferrer">http://updates.jenkins.io/update-center.json</a></p><p>2,进入jenkins服务器,修改/etc/resolv.conf 文件,添加 nameserver nameserver 8.8.8.8 nameserver 114.114.114.114</p></div><h3 id="no-valid-crumb-was-included-in-request" tabindex="-1">No valid crumb was included in request <a class="header-anchor" href="#no-valid-crumb-was-included-in-request" aria-hidden="true">#</a></h3><div class="warning custom-block"><p class="custom-block-title">新版本Jenkins的CSRF安全校验的问题</p><ul><li><p>出现No valid crumb was included in request for /pluginManager/installPlugins by admin. Returning 403.</p></li><li><p>进入/jenkins_home/</p></li><li><p>编辑config.xml</p></li></ul></div><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">crumbIssuer</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hudson.security.csrf.DefaultCrumbIssuer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">excludeClientIPFromCrumb</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">true</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">excludeClientIPFromCrumb</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">crumbIssuer</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="_553-mail-from-must-equal-authorized-user" tabindex="-1">553 mail from must equal authorized user <a class="header-anchor" href="#_553-mail-from-must-equal-authorized-user" aria-hidden="true">#</a></h3><div class="warning custom-block"><p class="custom-block-title">测试邮件出现553 mail from must equal authorized user</p><ul><li><p>出现553 mail from must equal authorized user</p></li><li><p>在 系统管理（Manage Jenkins）的&quot;系统设置（Configure system）&quot;中&quot;Jenkins Location&quot;添加系统管理员邮件地址（System Admin e-mail address）</p></li><li><p>System Admin e-mail address要和邮件服务器的用户名一致</p></li></ul></div><h3 id="maven-jvm-terminated-unexpectedly-with-exit-code-137" tabindex="-1">Maven JVM terminated unexpectedly with exit code 137 <a class="header-anchor" href="#maven-jvm-terminated-unexpectedly-with-exit-code-137" aria-hidden="true">#</a></h3><div class="warning custom-block"><p class="custom-block-title">Maven JVM terminated unexpectedly with exit code 137</p><ul><li><p>有可能是服务器内存不足</p></li><li><p>docker update jenkins -m 3g --memory-swap -1</p></li><li><p>重启服务</p></li></ul></div>`,81),t=[o];function p(i,c,r,d,u,h){return l(),e("div",null,t)}const C=s(n,[["render",p]]);export{m as __pageData,C as default};
