import{_ as s,o as a,c as e,d as t}from"./app.987649b4.js";const F=JSON.parse('{"title":"useTable 钩子","description":"","frontmatter":{},"headers":[{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"返回值","slug":"返回值","link":"#返回值","children":[]}],"relativePath":"profield/useTable.md","lastUpdated":1666927999000}'),n={name:"profield/useTable.md"},l=t(`<h1 id="usetable-钩子" tabindex="-1">useTable 钩子 <a class="header-anchor" href="#usetable-钩子" aria-hidden="true">#</a></h1><ul><li><code>useTable</code> 是一个表格钩子,用于生成表格需要的事件方法</li></ul><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useTable</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">profield</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  rowclass</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  onSelectChange</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  handleTableChange</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  edit</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  del</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  look</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  customRow</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  SelectedRowKeys</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useTable</span><span style="color:#A6ACCD;">(emit)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-hidden="true">#</a></h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>emit</td><td>事件触发器</td><td><code>Function</code></td><td>-</td></tr></tbody></table><h2 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-hidden="true">#</a></h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>rowclass</td><td>表格行样式</td><td><code>Function</code></td></tr><tr><td>onSelectChange</td><td>表格行选择事件</td><td><code>Function</code></td></tr><tr><td>handleTableChange</td><td>表格分页事件</td><td><code>Function</code></td></tr><tr><td>customRow</td><td>表格行自定义事件</td><td><code>Function</code></td></tr><tr><td>SelectedRowKeys</td><td>表格行选择的 key</td><td><code>Array</code></td></tr></tbody></table>`,8),o=[l];function p(c,d,r,i,h,D){return a(),e("div",null,o)}const C=s(n,[["render",p]]);export{F as __pageData,C as default};
