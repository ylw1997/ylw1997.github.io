import{_ as s,o as a,c as l,d as n}from"./app.b9a5d55a.js";const C=JSON.parse('{"title":"lombok","description":"","frontmatter":{},"headers":[{"level":2,"title":"@Data 注解","slug":"data-注解","link":"#data-注解","children":[]},{"level":2,"title":"@Builder 注解","slug":"builder-注解","link":"#builder-注解","children":[]},{"level":2,"title":"@AllArgsConstructor注解","slug":"allargsconstructor注解","link":"#allargsconstructor注解","children":[]},{"level":2,"title":"@toSting注解","slug":"tosting注解","link":"#tosting注解","children":[]},{"level":2,"title":"@Log,@Slf4j,@Log4j","slug":"log-slf4j-log4j","link":"#log-slf4j-log4j","children":[]},{"level":2,"title":"@Getter,@Setter","slug":"getter-setter","link":"#getter-setter","children":[]},{"level":2,"title":"@EqualsAndHashCode","slug":"equalsandhashcode","link":"#equalsandhashcode","children":[]}],"relativePath":"back/java/lombok.md","lastUpdated":1676365346000}'),o={name:"back/java/lombok.md"},p=n(`<h1 id="lombok" tabindex="-1">lombok <a class="header-anchor" href="#lombok" aria-hidden="true">#</a></h1><h2 id="data-注解" tabindex="-1">@Data 注解 <a class="header-anchor" href="#data-注解" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">Data</p><ul><li><p>在 java 类上使用@Data 注解，将为我们在编译期自动生成</p></li><li><p>成员变量的 get 和 set 方法</p></li><li><p>equals 方法</p></li><li><p>canEqual 方法</p></li><li><p>hashCode 方法</p></li><li><p>toString 方法</p></li></ul></div><h2 id="builder-注解" tabindex="-1">@Builder 注解 <a class="header-anchor" href="#builder-注解" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">Builder</p><ul><li>在 Java 类上使用 Builder 注解之后，我们可以使用如下代码为对象属性赋值</li></ul></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">User</span><span style="color:#A6ACCD;"> daiyu </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> User</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">builder</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">name</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">daiyu</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">age</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">build</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre></div><h2 id="allargsconstructor注解" tabindex="-1">@AllArgsConstructor注解 <a class="header-anchor" href="#allargsconstructor注解" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">AllArgsConstructor</p><ul><li><p>AllArgsConstructor注解将为我们在编译期自动生成：全参构造函数。</p></li><li><p>有全参构造函数注解，自然就有无参构造函数注解：NoArgsConstructor注解。</p></li></ul></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">User</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yangliwei</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="tosting注解" tabindex="-1">@toSting注解 <a class="header-anchor" href="#tosting注解" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">toString</p><ul><li>覆盖默认的toString()方法，将呈现类的基本信息</li></ul></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> throws Exception</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">User</span><span style="color:#A6ACCD;"> user</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">User</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setId</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setName</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bb</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//输出:User(id=1, name=Asens)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="log-slf4j-log4j" tabindex="-1">@Log,@Slf4j,@Log4j <a class="header-anchor" href="#log-slf4j-log4j" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>可用于打印日志，但是更推荐使用@Slf4j</li></ul></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">valueOf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">users</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span></code></pre></div><h2 id="getter-setter" tabindex="-1">@Getter,@Setter <a class="header-anchor" href="#getter-setter" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>可用于生成get和set方法</li><li>可以在类上使用，也可以在属性上使用</li></ul></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Getter</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Setter</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> id</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="equalsandhashcode" tabindex="-1">@EqualsAndHashCode <a class="header-anchor" href="#equalsandhashcode" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><p>可用于生成equals和hashCode方法</p></li><li><p>可以在类上使用，也可以在属性上使用</p></li><li><p>可以指定属性，也可以不指定属性</p></li></ul></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">EqualsAndHashCode</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> id</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,21),e=[p];function t(c,r,i,y,D,A){return a(),l("div",null,e)}const F=s(o,[["render",t]]);export{C as __pageData,F as default};
