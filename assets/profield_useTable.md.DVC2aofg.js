import{_ as s,c as a,o as t,a4 as i}from"./chunks/framework.FFX0tUBF.js";const u=JSON.parse('{"title":"useTable 钩子","description":"","frontmatter":{},"headers":[],"relativePath":"profield/useTable.md","filePath":"profield/useTable.md","lastUpdated":1718595028000}'),e={name:"profield/useTable.md"},n=i(`<h1 id="usetable-钩子" tabindex="-1">useTable 钩子 <a class="header-anchor" href="#usetable-钩子" aria-label="Permalink to &quot;useTable 钩子&quot;">​</a></h1><ul><li><code>useTable</code> 是一个表格钩子,用于生成表格需要的事件方法</li></ul><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useTable } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;profield&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  rowclass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  onSelectChange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  handleTableChange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  edit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  del</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  look</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  customRow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  SelectedRowKeys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(emit);</span></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>emit</td><td>事件触发器</td><td><code>Function</code></td><td>-</td></tr></tbody></table><h2 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>rowclass</td><td>表格行样式</td><td><code>Function</code></td></tr><tr><td>onSelectChange</td><td>表格行选择事件</td><td><code>Function</code></td></tr><tr><td>handleTableChange</td><td>表格分页事件</td><td><code>Function</code></td></tr><tr><td>customRow</td><td>表格行自定义事件</td><td><code>Function</code></td></tr><tr><td>SelectedRowKeys</td><td>表格行选择的 key</td><td><code>Array</code></td></tr></tbody></table>`,8),l=[n];function h(d,p,r,k,o,c){return t(),a("div",null,l)}const g=s(e,[["render",h]]);export{u as __pageData,g as default};
