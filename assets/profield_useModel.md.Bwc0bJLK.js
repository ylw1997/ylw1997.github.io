import{_ as s,c as a,o as i,ag as e}from"./chunks/framework.BZemHgQ6.js";const c=JSON.parse('{"title":"useModel 钩子","description":"","frontmatter":{},"headers":[],"relativePath":"profield/useModel.md","filePath":"profield/useModel.md","lastUpdated":1740542037000}'),d={name:"profield/useModel.md"};function l(h,t,n,o,r,p){return i(),a("div",null,t[0]||(t[0]=[e(`<h1 id="usemodel-钩子" tabindex="-1">useModel 钩子 <a class="header-anchor" href="#usemodel-钩子" aria-label="Permalink to &quot;useModel 钩子&quot;">​</a></h1><ul><li>用于生成弹窗和抽屉的事件</li></ul><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useModel } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;profield&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">visible</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">modelData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">edit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">look</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(columns.value);</span></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>columns</td><td>表格列</td><td><code>columnItem[]</code></td><td>-</td></tr></tbody></table><h2 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h2><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>visible</td><td>弹窗和抽屉的显示状态</td><td><code>Boolean</code></td></tr><tr><td>modelData</td><td>弹窗和抽屉的数据</td><td><code>Object</code></td></tr><tr><td>add</td><td>添加事件</td><td><code>(params?: any) =&gt; void</code></td></tr><tr><td>edit</td><td>编辑事件</td><td><code>(record: {[text: string]: any}) =&gt; void</code></td></tr><tr><td>look</td><td>查看事件</td><td><code>(record: {[text: string]: any}) =&gt; void</code></td></tr></tbody></table>`,8)]))}const E=s(d,[["render",l]]);export{c as __pageData,E as default};
