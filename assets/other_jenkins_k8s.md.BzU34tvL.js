import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.BZemHgQ6.js";const c=JSON.parse('{"title":"jenkins+harbor+gitlab+k8s 实现自动化部署","description":"","frontmatter":{},"headers":[],"relativePath":"other/jenkins_k8s.md","filePath":"other/jenkins_k8s.md","lastUpdated":1740551679000}'),h={name:"other/jenkins_k8s.md"};function k(t,s,e,p,r,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="jenkins-harbor-gitlab-k8s-实现自动化部署" tabindex="-1">jenkins+harbor+gitlab+k8s 实现自动化部署 <a class="header-anchor" href="#jenkins-harbor-gitlab-k8s-实现自动化部署" aria-label="Permalink to &quot;jenkins+harbor+gitlab+k8s 实现自动化部署&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><p>提交代码到gitlab，触发jenkins构建镜像并推送到harbor，然后通过k8s部署到k8s集群中</p></li><li><p>前提: k8s集群已经搭建好，harbor已经搭建好，gitlab已经搭建好，jenkins已经搭建好</p></li></ul></div><h2 id="_1-在k8s-所有节点登录harbor" tabindex="-1">1. 在k8s 所有节点登录harbor <a class="header-anchor" href="#_1-在k8s-所有节点登录harbor" aria-label="Permalink to &quot;1. 在k8s 所有节点登录harbor&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>为了让k8s集群中的所有节点都能拉取harbor中的镜像，需要在所有节点上登录harbor</li></ul></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> admin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Harbor12345</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> harbor.abc.com</span></span></code></pre></div><h2 id="_2-在k8s-所有docker修改daemon-json" tabindex="-1">2, 在k8s 所有docker修改daemon.json <a class="header-anchor" href="#_2-在k8s-所有docker修改daemon-json" aria-label="Permalink to &quot;2, 在k8s 所有docker修改daemon.json&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>为了让k8s集群中的所有节点都能拉取harbor中的镜像，需要在所有节点上修改docker的配置文件</li><li>修改后重启docker</li></ul></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/docker/daemon.json</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;insecure-registries&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;harbor.abc.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_3-修改jenkins的docker-compose配置文件" tabindex="-1">3, 修改jenkins的docker compose配置文件 <a class="header-anchor" href="#_3-修改jenkins的docker-compose配置文件" aria-label="Permalink to &quot;3, 修改jenkins的docker compose配置文件&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>注意:这里jenkins是其他服务器docker安装的,直接安装jenkins有docker环境则不需要</li><li>为了让jenkins能够打包推送镜像，需要在jenkins的docker compose配置文件中映射docker运行文件</li><li>修改后重启jenkins</li></ul></div><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># docker-compose.yml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  docker_jenkins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">root</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jenkins/jenkins:jdk17</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">docker_jenkins</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;8080:8080&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/root/apps/jenkins/jenkins_home:/var/jenkins_home</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 把jenkins_home映射到本地</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/usr/bin/docker:/usr/bin/docker</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 把docker映射到jenkins内</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/run/docker.sock:/var/run/docker.sock</span></span></code></pre></div><h2 id="_4-jenkins-安装插件" tabindex="-1">4, jenkins 安装插件 <a class="header-anchor" href="#_4-jenkins-安装插件" aria-label="Permalink to &quot;4, jenkins 安装插件&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><p>安装 docker-build-step 插件 <a href="https://plugins.jenkins.io/docker-build-step/" target="_blank" rel="noreferrer">https://plugins.jenkins.io/docker-build-step/</a></p></li><li><p>插件包含了docker build、docker push、docker tag等命令</p></li></ul></div><h2 id="_5-jenkins-配置" tabindex="-1">5, jenkins 配置 <a class="header-anchor" href="#_5-jenkins-配置" aria-label="Permalink to &quot;5, jenkins 配置&quot;">​</a></h2><h3 id="_5-1-打包镜像配置" tabindex="-1">5.1 打包镜像配置 <a class="header-anchor" href="#_5-1-打包镜像配置" aria-label="Permalink to &quot;5.1 打包镜像配置&quot;">​</a></h3><p><img src="https://i0.hdslb.com/bfs/article/350492110988710f34b3c8c74c9b2dab102411794.png" alt="build image"></p><h3 id="_5-2推送镜像配置" tabindex="-1">5.2推送镜像配置 <a class="header-anchor" href="#_5-2推送镜像配置" aria-label="Permalink to &quot;5.2推送镜像配置&quot;">​</a></h3><p><img src="https://i0.hdslb.com/bfs/article/5f9d3f88d03680bf7f94c4e4a19b39b8102411794.png" alt="push image"></p><h3 id="_5-3-部署k8s配置" tabindex="-1">5.3 部署k8s配置 <a class="header-anchor" href="#_5-3-部署k8s配置" aria-label="Permalink to &quot;5.3 部署k8s配置&quot;">​</a></h3><p><img src="https://i0.hdslb.com/bfs/article/6bcf7535a8c75a7466c7245c6a895711102411794.png" alt="k8s deploy"></p><h2 id="_6-查看harbor是否有镜像" tabindex="-1">6,查看harbor是否有镜像 <a class="header-anchor" href="#_6-查看harbor是否有镜像" aria-label="Permalink to &quot;6,查看harbor是否有镜像&quot;">​</a></h2><ul><li>harbor中有镜像 <img src="https://i0.hdslb.com/bfs/article/a3063a352ab5398014b473e7e0b7122d102411794.png" alt="harbor image"></li></ul><h2 id="_7-k8s-yml文件" tabindex="-1">7,k8s yml文件 <a class="header-anchor" href="#_7-k8s-yml文件" aria-label="Permalink to &quot;7,k8s yml文件&quot;">​</a></h2><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">apps/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">product-deployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">product</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    matchLabels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">product</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">product</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      containers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">product</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">dev.qmsznj.com:7443/library/product:80</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        imagePullPolicy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">containerPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">product-service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">product</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NodePort</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    targetPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8000</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 指定容器端口</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    nodePort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30001</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 指定对外端口</span></span></code></pre></div><h2 id="_8-查看k8s是否有镜像" tabindex="-1">8,查看k8s是否有镜像 <a class="header-anchor" href="#_8-查看k8s是否有镜像" aria-label="Permalink to &quot;8,查看k8s是否有镜像&quot;">​</a></h2><ul><li>在k8s集群中查看镜像</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@master </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# kubectl get pods</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                 READY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   STATUS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    RESTARTS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   AGE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">product-deployment-9b86d5657-nfgz6</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   1/1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          9d</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">product-deployment-9b86d5657-xrtsx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   1/1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          9d</span></span></code></pre></div><h2 id="_9-访问k8s服务" tabindex="-1">9,访问k8s服务 <a class="header-anchor" href="#_9-访问k8s服务" aria-label="Permalink to &quot;9,访问k8s服务&quot;">​</a></h2><ul><li>访问k8s服务</li></ul><p><img src="https://i0.hdslb.com/bfs/article/13f90870ad366678af06842bab42bdb9102411794.png" alt="k8s service"></p><h2 id="_10-查看k8s日志" tabindex="-1">10,查看k8s日志 <a class="header-anchor" href="#_10-查看k8s日志" aria-label="Permalink to &quot;10,查看k8s日志&quot;">​</a></h2><ul><li>查看k8s日志</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@master </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# kubectl logs product-deployment-9b86d5657-nfgz6</span></span></code></pre></div><h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h2><h3 id="_1-jenkins-没有docker命令" tabindex="-1">1, jenkins 没有docker命令 <a class="header-anchor" href="#_1-jenkins-没有docker命令" aria-label="Permalink to &quot;1, jenkins 没有docker命令&quot;">​</a></h3><ul><li>必须映射docker到jenkins内</li></ul><h3 id="_2-jenkins-ssh执行kubectl-命令报错" tabindex="-1">2, jenkins ssh执行kubectl 命令报错 <a class="header-anchor" href="#_2-jenkins-ssh执行kubectl-命令报错" aria-label="Permalink to &quot;2, jenkins ssh执行kubectl 命令报错&quot;">​</a></h3><ul><li><p>因为 linux <a href="mailto:ssh@192.168.0.238" target="_blank" rel="noreferrer">ssh@192.168.0.238</a> &#39;kubectl get pods&#39; 和 登陆后再执行 kubectl get pods 是不一样的</p></li><li><p>直接修改.bashrc文件,添加kubernetes对应的环境变量</p></li><li><p>参考: <a href="https://www.jianshu.com/p/f24c7445c4db" target="_blank" rel="noreferrer">https://www.jianshu.com/p/f24c7445c4db</a></p></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@master </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# cat .bashrc</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .bashrc</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># User specific aliases and functions</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rm -i&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cp -i&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mv -i&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Source global definitions</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /etc/bashrc ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        .</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/bashrc</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion bash)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KUBECONFIG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/etc/kubernetes/admin.conf</span></span></code></pre></div>`,40)]))}const o=i(h,[["render",k]]);export{c as __pageData,o as default};
